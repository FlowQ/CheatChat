doctype html
html(lang='en-US' ng-app="ChatApp" ng-controller='chatController' ng-keyup="page.keyPress($event)")
head
    //
       GenHTML revision 25226
    meta(http-equiv='Content-type', content='text/html; charset=utf-8')
    title Overview of Ajax - The Java EE 6 Tutorial
    meta(name='robots', content='index,follow')
    meta(name='robots', content='index,follow')
    meta(name='date', content='2013-01-01')
    link(rel='stylesheet', type='text/css', href='css/default.css')
    link(rel='stylesheet', type='text/css', href='css/ipg.css')
    link(rel='stylesheet', type='text/css', href='css/javaeetutorial.css')
  body
    table(border='0', cellpadding='5', cellspacing='0', width='100%')
      tbody
        tr(valign='top')
          td(width='400px')
            p.toc.level1
              a(href='docinfo.html') Document Information
            p.toc.level1.tocsp
              a(href='gexaf.html') Preface
            p.toc.level1.tocsp
              a(href='gfirp.html') Part I Introduction
            p.toc.level2
              a(href='bnaaw.html') 1.  Overview
            p.toc.level2
              a(href='gfiud.html') 2.  Using the Tutorial Examples
            p.toc.level1.tocsp
              a(href='bnadp.html') Part II The Web Tier
            p.toc.level2
              a(href='bnadr.html') 3.  Getting Started with Web Applications
            p.toc.level2
              a(href='bnaph.html') 4.  JavaServer Faces Technology
            p.toc.level2
              a(href='giepx.html') 5.  Introduction to Facelets
            p.toc.level2
              a(href='gjddd.html') 6.  Expression Language
            p.toc.level2
              a(href='bnaqz.html') 7.  Using JavaServer Faces Technology in Web Pages
            p.toc.level2
              a(href='gjcut.html') 8.  Using Converters, Listeners, and Validators
            p.toc.level2
              a(href='bnatx.html') 9.  Developing with JavaServer Faces Technology
            p.toc.level2
              a(href='gkmaa.html') 10.  JavaServer Faces Technology: Advanced Concepts
            p.toc.level2
              a(href='gkiow.html') 11.  Using Ajax with JavaServer Faces Technology
            #scrolltoc.onpage
              p.toc.level3
                a(href='') Overview of Ajax
            p.toc.level3
              a(href='gkinl.html') Using Ajax Functionality with JavaServer Faces Technology
            p.toc.level3
              a(href='gkabr.html') Using Ajax with Facelets
            p.toc.level4
              a(href='gkabr.html#gkafn')
                | Using the
                tt f:ajax
                | Tag
            p.toc.level3.tocsp
              a(href='gkace.html') Sending an Ajax Request
            p.toc.level4
              a(href='gkace.html#gkhvt')
                | Using the
                tt event
                | Attribute
            p.toc.level4
              a(href='gkace.html#gkhuz')
                | Using the
                tt execute
                | Attribute
            p.toc.level4
              a(href='gkace.html#gkhwm')
                | Using the
                tt immediate
                | Attribute
            p.toc.level4
              a(href='gkace.html#gkhzs')
                | Using the
                tt listener
                | Attribute
            p.toc.level3.tocsp
              a(href='gkddf.html') Monitoring Events on the Client
            p.toc.level3
              a(href='gkdcb.html') Handling Errors
            p.toc.level3
              a(href='gkdbr.html') Receiving an Ajax Response
            p.toc.level3
              a(href='gkuar.html') Ajax Request Lifecycle
            p.toc.level3
              a(href='gkhyh.html') Grouping of Components
            p.toc.level3
              a(href='gkaam.html') Loading JavaScript as a Resource
            p.toc.level4
              a(href='gkaam.html#gkafi') Using JavaScript API in a Facelets Application
            p.toc.level4
              a(href='gkaam.html#gkipx')
                | Using the
                tt @ResourceDependency
                | Annotation in a Bean Class
            p.toc.level3.tocsp
              a(href='gkokb.html')
                | The
                tt ajaxguessnumber
                | Example Application
            p.toc.level4
              a(href='gkokb.html#gkoij')
                | The
                tt ajaxguessnumber
                | Source Files
            p.toc.level5
              a(href='gkokb.html#gkofw')
                | The
                tt ajaxgreeting.x                | Facelets Page
            p.toc.level5
              a(href='gkokb.html#gkofx')
                | The
                tt ui.js
                | JavaScript File
            p.toc.level5
              a(href='gkokb.html#gkohn')
                | The
                tt UserNumberBean
                | Managed Bean
            p.toc.level4.tocsp
              a(href='gkokb.html#gkoke')
                | Running the
                tt ajaxguessnumber
                | Example
            p.toc.level5
              a(href='gkokb.html#glhvu')
                | To Build, Package, and Deploy the
                tt ajaxguessnumber
                | Example Using NetBeans IDE
            p.toc.level5
              a(href='gkokb.html#glhvq')
                | To Build, Package, and Deploy the
                tt ajaxguessnumber
                | Example Using Ant
            p.toc.level5
              a(href='gkokb.html#glhwe')
                | To Run the
                tt ajaxguessnumber
                | Example
            p.toc.level3.tocsp
              a(href='gksdk.html') Further Information about Ajax in JavaServer Faces Technology
            p.toc.level2.tocsp
              a(href='gkhxa.html') 12.  Composite Components: Advanced Topics and Example
            p.toc.level2
              a(href='bnavg.html') 13.  Creating Custom UI Components and Other Custom Objects
            p.toc.level2
              a(href='bnawo.html') 14.  Configuring JavaServer Faces Applications
            p.toc.level2
              a(href='bnafd.html') 15.  Java Servlet Technology
            p.toc.level2
              a(href='glrbb.html') 16.  Uploading Files with Java Servlet Technology
            p.toc.level2
              a(href='bnaxu.html') 17.  Internationalizing and Localizing Web Applications
            p.toc.level1.tocsp
              a(href='bnayk.html') Part III Web Services
            p.toc.level2
              a(href='gijti.html') 18.  Introduction to Web Services
            p.toc.level2
              a(href='bnayl.html') 19.  Building Web Services with JAX-WS
            p.toc.level2
              a(href='giepu.html') 20.  Building RESTful Web Services with JAX-RS
            p.toc.level2
              a(href='gjjxe.html') 21.  JAX-RS: Advanced Topics and Example
            p.toc.level1.tocsp
              a(href='bnblr.html') Part IV Enterprise Beans
            p.toc.level2
              a(href='gijsz.html') 22.  Enterprise Beans
            p.toc.level2
              a(href='gijre.html') 23.  Getting Started with Enterprise Beans
            p.toc.level2
              a(href='gijrb.html') 24.  Running the Enterprise Bean Examples
            p.toc.level2
              a(href='bnbpk.html') 25.  A Message-Driven Bean Example
            p.toc.level2
              a(href='gkcqz.html') 26.  Using the Embedded Enterprise Bean Container
            p.toc.level2
              a(href='gkidz.html') 27.  Using Asynchronous Method Invocation in Session Beans
            p.toc.level1.tocsp
              a(href='gjbnr.html') Part V Contexts and Dependency Injection for the Java EE Platform
            p.toc.level2
              a(href='giwhb.html') 28.  Introduction to Contexts and Dependency Injection for the Java EE Platform
            p.toc.level2
              a(href='gjbls.html') 29.  Running the Basic Contexts and Dependency Injection Examples
            p.toc.level2
              a(href='gjehi.html') 30.  Contexts and Dependency Injection for the Java EE Platform: Advanced Topics
            p.toc.level2
              a(href='gkhre.html') 31.  Running the Advanced Contexts and Dependency Injection Examples
            p.toc.level1.tocsp
              a(href='bnbpy.html') Part VI Persistence
            p.toc.level2
              a(href='bnbpz.html') 32.  Introduction to the Java Persistence API
            p.toc.level2
              a(href='gijst.html') 33.  Running the Persistence Examples
            p.toc.level2
              a(href='bnbtg.html') 34.  The Java Persistence Query Language
            p.toc.level2
              a(href='gjitv.html') 35.  Using the Criteria API to Create Queries
            p.toc.level2
              a(href='gkjiq.html') 36.  Creating and Using String-Based Criteria Queries
            p.toc.level2
              a(href='gkjjf.html') 37.  Controlling Concurrent Access to Entity Data with Locking
            p.toc.level2
              a(href='gkjia.html') 38.  Using a Second-Level Cache with Java Persistence API Applications
            p.toc.level1.tocsp
              a(href='gijrp.html') Part VII Security
            p.toc.level2
              a(href='bnbwj.html') 39.  Introduction to Security in the Java EE Platform
            p.toc.level2
              a(href='bncas.html') 40.  Getting Started Securing Web Applications
            p.toc.level2
              a(href='bnbyk.html') 41.  Getting Started Securing Enterprise Applications
            p.toc.level2
              a(href='gjjwx.html') 42.  Java EE Security: Advanced Topics
            p.toc.level1.tocsp
              a(href='gijue.html') Part VIII Java EE Supporting Technologies
            p.toc.level2
              a(href='gijto.html') 43.  Introduction to Java EE Supporting Technologies
            p.toc.level2
              a(href='bncih.html') 44.  Transactions
            p.toc.level2
              a(href='bncjh.html') 45.  Resources and Resource Adapters
            p.toc.level2
              a(href='glodb.html') 46.  The Resource Adapter Example
            p.toc.level2
              a(href='bncdq.html') 47.  Java Message Service Concepts
            p.toc.level2
              a(href='bncgv.html') 48.  Java Message Service Examples
            p.toc.level2
              a(href='gkahp.html') 49.  Bean Validation: Advanced Topics
            p.toc.level2
              a(href='gkeed.html') 50.  Using Java EE Interceptors
            p.toc.level1.tocsp
              a(href='gkgjw.html') Part IX Case Studies
            p.toc.level2
              a(href='glnvi.html') 51.  Duke's Bookstore Case Study Example
            p.toc.level2
              a(href='gkaee.html') 52.  Duke's Tutoring Case Study Example
            p.toc.level2
              a(href='glnpw.html') 53.  Duke's Forest Case Study Example
            p.toc.level1.tocsp
              a(href='idx-1.html') Index
          td(width='10px')  
          td
            .header
              .banner
                table(width='100%', border='0', cellpadding='5', cellspacing='0')
                  tbody
                    tr
                      td(valign='bottom')
                        p.Banner
                          | The Java EE 6 Tutorial
                      td(align='right', valign='bottom')
                        img(src='graphics/javalogo.png', alt='Java Coffee Cup logo' ng-click="page.goToChat()")
              .header-links
                a(href='./index.html') Home
                | |
                a(href='../information/download.html') Download
                | |
                a(href='./javaeetutorial6.pdf') PDF
                | |
                a(href='../information/faq.html') FAQ
                | |
                a(href='http://docs.oracle.com/javaee/support/feedback.htm') Feedback
              .navigation
                a(href='gkiow.html')
                  img(src='graphics/leftButton.gif', border='0', alt='Previous', title='Previous')
                a(href='p1.html')
                  img(src='graphics/upButton.gif', border='0', alt='Contents', title='Contents')
                a(href='gkinl.html')
                  img(src='graphics/rightButton.gif', border='0', alt='Next', title='Next')
            .maincontent
              a(name='gkigr')
              h2 Overview of Ajax
              a(name='indexterm-754')
              p
                | Ajax refers to JavaScript and XML, technologies that are widely used for creating
                | dynamic and asynchronous web content. While Ajax is not limited to JavaScript and
                | XML technologies, more often than not they are used together by web applications.
                | The focus of this tutorial is on using JavaScript based Ajax functionality in
                | JavaServer Faces web applications.
              p
                | JavaScript is a dynamic scripting language for web applications. It allows users to
                | add enhanced functionality to user interfaces and allows web pages to interact with
                | clients asynchronously. JavaScript runs mainly on the client side (as in a browser)
                | and thereby reduces server access by clients.
              p
                | When a JavaScript function sends an asynchronous request from the client to the
                | server, the server sends back a response that is used to update
                | the page’s Document Object Model (DOM). This response is often in the format of
                | an XML document. The term
                b Ajax
                | refers to this interaction between the client
                | and server.
              p
                | The server response need not be in XML only; it can also
                | be in other formats, such as
                a(href='http://www.json.org/') JSON
                | . This tutorial does not focus on the
                | response formats.
              p
                | Ajax enables asynchronous and partial updating of web applications. Such functionality allows for
                | highly responsive web pages that are rendered in near real time. Ajax-based web
                | applications can access server and process information and can also retrieve data without
                | interfering with the display and rendering of the current web page on a
                | client (such as a browser).
              p Some of the advantages of using Ajax are as follows:
              ul
                li
                  p
                    | Form data validation in real time, eliminating the need to submit the form for verification
                li
                  p Enhanced functionality for web pages, such as user name and password prompts
                li
                  p Partial update of the web content, avoiding complete page reloads
            .navigation
              a(href='gkiow.html')
                img(src='graphics/leftButton.gif', border='0', alt='Previous', title='Previous')
              a(href='p1.html')
                img(src='graphics/upButton.gif', border='0', alt='Contents', title='Contents')
              a(href='gkinl.html')
                img(src='graphics/rightButton.gif', border='0', alt='Next', title='Next')
            .copyright
              p
                | Copyright © 2013, Oracle and/or its affiliates. All rights reserved.
                a(href='docinfo.html') Legal Notices

    //
       Start SiteCatalyst code   
    script(language='JavaScript', src='http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js')
    script(language='JavaScript', src='http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js')
    //
       ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** 
    //
        Below code will send the info to Omniture server 
    script(language='javascript')
      var s_code=s.t();if(s_code)document.write(s_code)
    noscript
      p
        | Scripting on this page tracks web page traffic,
        | but does not change the content in any way.
    //
       End SiteCatalyst code 
    //chat
    block content
    
